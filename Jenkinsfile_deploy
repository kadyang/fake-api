pipeline {
    agent any

    options {
        ansiColor('xterm')
        buildDiscarder(logRotator(daysToKeepStr: '7', numToKeepStr: '10'))
    }

    stages {
        stage('Gen file') {
            steps {
                sh 'echo "artifact file" > generatedFile_2.txt'
            }
        }
        stage('Hello') {
            steps {
                withCredentials(bindings: [sshUserPrivateKey(credentialsId: 'deployer', 
                                                             keyFileVariable: 'SSH_KEY_FOR_DEPLOYER',
                                                             usernameVariable: 'SSH_USERNAME_FOR_DEPLOYER')]) {
                    ansiblePlaybook playbook: '.ansible/playbooks/deploy.yml', 
                        inventory: ".ansible/inventories/${INPUT_SERVER_ENV}.ini", 
                        extras: "-e source_project_path=${WORKSPACE} \
                                 -e target_project_path=/home/vagrant/odoo/custom/kkday \
                                 -u ${SSH_USERNAME_FOR_DEPLOYER} \
                                 --private-key ${SSH_KEY_FOR_DEPLOYER}", 
                        colorized: true,
                        disableHostKeyChecking: true
                }
            }
        }
        stage('Build') {
            steps {
                echo 'Building....'
            }
        }
        stage('Deploy') {
            steps {
                echo 'Deploying....'
            }
     
        }
        stage('show all env') {
            steps {
                echo sh(script: 'env|sort', returnStdout: true)
            }
        }
    }
    post {
        always {
            cleanWs()
        }
    }
}
